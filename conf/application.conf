# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.gatekeeper.config.ErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.gatekeeper.config.ConfigurationModule"
play.modules.enabled += "uk.gov.hmrc.apiplatform.modules.gkauth.config.ConfigurationModule"
play.modules.enabled += "uk.gov.hmrc.apiplatform.modules.events.config.EventsConfigurationModule"
play.modules.enabled += "uk.gov.hmrc.gatekeeper.encryption.PayloadEncryptionModule"
play.modules.enabled += "uk.gov.hmrc.internalauth.client.modules.InternalAuthModule"
play.modules.enabled += "uk.gov.hmrc.apiplatform.modules.common.config.ClockModule"

appName = "api-gatekeeper-frontend"

play.http.router = prod.Routes

play.filters.enabled += play.filters.csp.CSPFilter

csrfexceptions.whitelist = ["/api-gatekeeper/login"]
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

# used to encrypt json payload fields (where required) for both, Mongo and REST
json.encryption {
  key = "P5xsJ9Nt+quxGZzB4DeLfw=="
  previousKeys = []
}

third-party-developer.json.encryption.key = "czV2OHkvQj9FKEgrTWJQZVNoVm1ZcTN0Nnc5eiRDJkY="

contact-frontend {
  host = "http://localhost:9250"
}

devHubBaseUrl = "http://localhost:9680"

wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}

roles {
  super-user = "super-user-role"
  user = "user-role"
  admin = "admin-role"
}

retryCount = 3
retryDelayMilliseconds = 500

api-gatekeeper-approvals-frontend.enabled = false
application.grantlength.norefreshtoken.shown = false

internal-auth.token = "9684"

microservice {
  services {
    api-platform-events-subordinate {
      host = localhost
      port = 6700
      use-proxy = false
    }

    api-platform-events-principal {
      host = localhost
      port = 6700
    }

    auth {
      protocol = http
      host = localhost
      port = 8500
    }

    internal-auth {
      host = localhost
      port = 8470
    }

    third-party-application-sandbox {
      host = localhost
      port = 9607
      use-proxy = false
    }

    third-party-application-production {
      host = localhost
      port = 9607
    }

    third-party-developer {
      host = localhost
      port = 9615
    }

    api-definition-sandbox {
      host = localhost
      port = 9604
      use-proxy = false
    }

    api-definition-production {
      host = localhost
      port = 9604
    }

    api-scope-sandbox {
      host = localhost
      port = 9690
      use-proxy = false
    }

    api-scope-production {
      host = localhost
      port = 9690
    }

    api-subscription-fields-sandbox {
      host = localhost
      port = 9650
      use-proxy = false
    }

    api-subscription-fields-production {
      host = localhost
      port = 9650
    }

    stride-auth-frontend {
      protocol = http
      host = localhost
      port = 9041
    }

    api-publisher-sandbox {
      host = localhost
      port = 9603
      user-proxy = false
    }

    api-publisher-production {
      host = localhost
      port = 9603
    }

    api-platform-microservice {
      host = localhost
      port = 9602
      use-proxy = false
    }

    api-platform-api-catalogue-publish {
      host = localhost
      port = 11115
    }

    api-gatekeeper-approvals-frontend {
      protocol = http
      host = localhost
      port = 9683
    }

    api-gatekeeper-email-frontend {
      protocol = http
      host = localhost
      port = 9692
    }

    api-platform-xml-services {
      protocol = http
      host = localhost
      port = 11116
    }

    api-gatekeeper-xml-services-frontend {
      protocol = http
      host = localhost
      port = 11117
    }

    api-gatekeeper-apis-frontend {
      protocol = http
      host = localhost
      port = 9682
    }

    third-party-orchestrator {
      protocol = http
      host = localhost
      port = 15501
    }

    api-platform-admin-api {
      protocol = http
      host = localhost
      port = 15505
    }    
  }
}

stride {
  origin = ${appName}
  success-url = "http://localhost:9684/api-gatekeeper/applications"

  roles {
    super-user = "super-user-role"
    user = "user-role"
    admin = "admin-role"
  }
}
