# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName="api-gatekeeper-frontend"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

play.http.router=prod.Routes

application.global=config.ApplicationGlobal

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9032 www.google-analytics.com data:"

csrfexceptions.whitelist = ["/api-gatekeeper/login"]
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

# used to encrypt json payload fields (where required) for both, Mongo and REST
json.encryption {
  key = "P5xsJ9Nt+quxGZzB4DeLfw=="
  previousKeys = []
}

assets {
  version = "2.241.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

google-analytics {
  token=N/A
  host=auto
}

contact-frontend {
  host = "http://localhost:9250"
}

devHubBaseUrl = "http://localhost:9680"

wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}

superUsers = []

Stub {
  auditing {
    enabled=false
  }

  microservice {
    services {
      auth {
        host = localhost
        port = ${wiremock-port}
      }

      third-party-application {
        host = localhost
        port = ${wiremock-port}
      }

      third-party-developer {
        host = localhost
        port = ${wiremock-port}
      }

      api-definition{
        host = localhost
        port = ${wiremock-port}
      }
    }
  }
}

Dev {
  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {
    metrics {
      graphite {
        enabled = false
      }
    }

    services {
      auth {
        host = localhost
        port = 8500
      }

      third-party-application {
        host = localhost
        port = 9607
      }

      third-party-developer {
        host = localhost
        port = 9615
      }

      api-definition {
        host = localhost
        port = 9604
      }
    }
  }
}

Test {
  cookie.secure = false

  auditing {
    enabled = false
    traceRequests = true
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {
      auth {
        host = localhost
        port = 8500
      }

      third-party-application {
        host = localhost
        port = 9607
      }

      third-party-developer {
        host = localhost
        port = 9615
      }

      api-definition {
        host = localhost
        port = 9604
      }
    }
  }
}

Prod {
  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }

    services {
      auth {
        host = localhost
        port = 8500
      }

      third-party-application {
        host = localhost
        port = 9607
      }

      third-party-developer {
        host = localhost
        port = 9615
      }

      api-definition {
        host = localhost
        port = 9604
      }
    }
  }
}
