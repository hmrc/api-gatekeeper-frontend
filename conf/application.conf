# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

# Custom error handler
play.http.errorHandler = "config.ErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "config.ConfigurationModule"
play.modules.enabled += "uk.gov.hmrc.modules.stride.config.ConfigurationModule"
play.modules.enabled += "encryption.PayloadEncryptionModule"

appName="api-gatekeeper-frontend"

play.http.router=prod.Routes

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9032 www.google-analytics.com data:"

csrfexceptions.whitelist = ["/api-gatekeeper/login"]
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

# used to encrypt json payload fields (where required) for both, Mongo and REST
json.encryption {
  key = "P5xsJ9Nt+quxGZzB4DeLfw=="
  previousKeys = []
}

third-party-developer.json.encryption.key = "czV2OHkvQj9FKEgrTWJQZVNoVm1ZcTN0Nnc5eiRDJkY="

assets {
  version = "3.12.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}

devHubBaseUrl = "http://localhost:9680"

wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}

roles {
  super-user = "super-user-role"
  user = "user-role"
  admin = "admin-role"
}

retryCount = 3
retryDelayMilliseconds = 500

superUsers = ["maxpower"]

auditing {
  enabled = false
  traceRequests = false
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      enabled = false
    }
  }

  services {
    auth {
      protocol = http
      host = localhost
      port = 8500
    }

    third-party-application-sandbox {
      host = localhost
      port = 9607
      use-proxy = false
    }

    third-party-application-production {
      host = localhost
      port = 9607
      use-proxy = false
    }

    third-party-developer {
      host = localhost
      port = 9615
    }

    api-definition-sandbox {
      host = localhost
      port = 9604
      use-proxy = false
    }

    api-definition-production {
      host = localhost
      port = 9604
      use-proxy = false
    }

    api-scope-sandbox {
      host = localhost
      port = 9690
      use-proxy = false
    }

    api-scope-production {
      host = localhost
      port = 9690
      use-proxy = false
    }

    api-subscription-fields-sandbox {
      host = localhost
      port = 9650
      use-proxy = false
    }

    api-subscription-fields-production {
      host = localhost
      port = 9650
      use-proxy = false
    }

    stride-auth-frontend {
      protocol = http
      host = localhost
      port = 9041
    }

    api-publisher-sandbox {
      host = localhost
      port = 9603
      user-proxy = false
    }

    api-publisher-production {
      host = localhost
      port = 9603
      user-proxy = false
    }

    api-platform-microservice {
      host = localhost
      port = 9602
      use-proxy = false
    }

    api-platform-api-catalogue-publish {
      host = localhost
      port = 11115
      use-proxy = false
    }

    api-gatekeeper-approvals-frontend {
      host = localhost
      port = 9683
    }
  }
}

stride {
  origin = ${appName}
  success-url = "http://localhost:9684/api-gatekeeper/applications"

  roles {
    super-user = "super-user-role"
    user = "user-role"
    admin = "admin-role"
  }
}
