# microservice specific routes

GET         /login                                                  controllers.AccountController.loginPage
POST        /login                                                  controllers.AccountController.authenticate

GET         /logout                                                 controllers.AccountController.logout

GET         /review                                                 controllers.ApplicationController.reviewPage(id: String)


POST        /update-rate-limit-tier                                 controllers.ApplicationController.handleUpdateRateLimitTier(id: String)

GET         /developers                                             controllers.DevelopersController.developersPage(filter: Option[String], status: Option[String])

GET         /developer                                              controllers.DevelopersController.developerPage(email: String)
GET         /developer/delete                                       controllers.DevelopersController.deleteDeveloperPage(email: String)
POST        /developer/delete                                       controllers.DevelopersController.deleteDeveloperAction(email: String)

GET         /applications                                           controllers.ApplicationController.applicationsPage

GET         /applications/:id                                       controllers.ApplicationController.applicationPage(id: String)

POST        /applications/:id/handle-uplift                         controllers.ApplicationController.handleUplift(id: String)
GET         /applications/:id/resend-verification                   controllers.ApplicationController.resendVerification(id: String)

GET         /applications/:id/access/scopes                         controllers.ApplicationController.manageScopes(id: String)
POST        /applications/:id/access/scopes                         controllers.ApplicationController.updateScopes(id: String)

GET         /applications/:id/access/overrides                      controllers.ApplicationController.manageAccessOverrides(id: String)
POST        /applications/:id/access/overrides                      controllers.ApplicationController.updateAccessOverrides(id: String)

GET         /applications/:id/subscriptions                         controllers.ApplicationController.manageSubscription(id: String)
POST        /applications/:id/subscriptions/subscribe               controllers.ApplicationController.subscribeToApi(id: String, context: String, version: String)
POST        /applications/:id/subscriptions/unsubscribe             controllers.ApplicationController.unsubscribeFromApi(id: String, context: String, version: String)

GET         /applications/:id/rate-limit                            controllers.ApplicationController.manageRateLimitTier(id: String)
POST        /applications/:id/rate-limit                            controllers.ApplicationController.updateRateLimitTier(id: String)

->          /template                                               template.Routes

GET         /assets/*file                                           controllers.Assets.versioned(path="/public", file: Asset)

GET         /nav-links                                              controllers.NavigationController.navLinks

GET         /applications/:id/delete                                controllers.ApplicationController.deleteApplicationPage(id: String)
POST        /applications/:id/delete                                controllers.ApplicationController.deleteApplicationAction(id: String)